language: cpp
compiler: gcc
sudo: require
dist: trusty

services:
 - docker

env:
 - DEPENDENCY_PACKAGES="cmake libgee-0.8-dev libgranite-dev  debhelper libgtk-3-dev libgranite-dev libwebkit2gtk-4.0-37 libwebkit2gtk-4.0-dev libsqlite3-dev libpoppler-glib-dev valac"

before_install:
    - sudo add-apt-repository ppa:beineri/opt-qt59-trusty -y
    - sudo apt-get update -qq
    - docker pull elementary/docker:loki
    - docker run -v "$PWD":/tmp/build-dir elementary/docker:loki /bin/sh -c "apt-get update && apt-get -y install $DEPENDENCY_PACKAGES && cd /tmp/build-dir && cmake . && env CTEST_OUTPUT_ON_FAILURE=true make"
    - docker pull elementary/docker:loki-unstable
    - docker run -v "$PWD":/tmp/build-dir elementary/docker:loki-unstable /bin/sh -c "apt-get update && apt-get -y install $DEPENDENCY_PACKAGES && cd /tmp/build-dir && cmake . && env CTEST_OUTPUT_ON_FAILURE=true make"

install:
    - sudo apt-get -y install qt59base
    - source /opt/qt*/bin/qt*-env.sh
    - docker pull elementary/docker:loki
    - docker run -v "$PWD":/tmp/build-dir elementary/docker:loki /bin/sh -c "apt-get update && apt-get -y install $DEPENDENCY_PACKAGES && cd /tmp/build-dir && cmake . && env CTEST_OUTPUT_ON_FAILURE=true make"
    - docker pull elementary/docker:loki-unstable
    - docker run -v "$PWD":/tmp/build-dir elementary/docker:loki-unstable /bin/sh -c "apt-get update && apt-get -y install $DEPENDENCY_PACKAGES && cd /tmp/build-dir && cmake . && env CTEST_OUTPUT_ON_FAILURE=true make"


script:
  - cmake . -DCMAKE_INSTALL_PREFIX=/usr
  - make -j$(nproc)
  - make DESTDIR=appdir install ; find appdir/
  - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt*.AppImage
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -bundle-non-qt-libs
  - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -appimage
  - echo BUILDS PASSED

after_success:
  - find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - curl --upload-file ./bookworm*.AppImage https://transfer.sh/bookworm-git.$(git rev-parse --short HEAD)-x86_64.AppImage
